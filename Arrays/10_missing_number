// brute force
// sorting

// better
// space :- O(N)
// timr:- O(N)
int missingNumber(int arr[], int n)
{
    vector<bool> chk(n + 1, 0);
    for (int i = 0; i < n - 1; i++)
        chk[arr[i]] = 1;

    for (int i = 1; i <= n; i++)
        if (!chk[i])
            return i;
}

// optimized
int missingNumber(int arr[], int n)
{
    return (n * (n + 1)) / 2 - accumulate(arr, arr + n - 1, 0);
}

// using bit manipulation
// logic:- xor of no with its index will be equal to 0 and 
// only the index will be left if the element is absent
int missingNumber(vector<int> &arr)
{
    int i = 0;
    int temp = arr.size();
    for (auto j : arr)
    {
        temp = temp ^ j;
        temp = temp ^ i;
        i++;
    }
    return temp;
}